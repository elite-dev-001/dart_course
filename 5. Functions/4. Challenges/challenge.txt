* Challenges
Before moving on, here are some challenges to test your knowledge of functions. It’s best if you try to solve them yourself.

Challenge 1: Prime time
Write a function that checks if a number is prime.

Challenge 2: Can you repeat that?
Write a function named repeatTask with the following
definition:
    int repeatTask(int times, int input, Function task)

It repeats a given task on input for times number of times.

Pass an anonymous function to repeatTask to square the input of 2 four times. Confirm that you get the result 65536, since 2 squared is 4, 4 squared is 16, 16 squared is 256, and 256 squared is 65536.

Challenge 3: Darts and arrows
Update Challenge 2 to use arrow syntax.

Challenge 4: Compute the Hypotenuse

Write a function that takes the lengths of the two shorter sides of a right triangle as
its parameters. Return the hypotenuse of the triangle, computed using Pythagorean
theorem, as the function’s result. Include a main program that reads the lengths of
the shorter sides of a right triangle from the user, uses your function to compute the
length of the hypotenuse, and displays the result.

Challenge 5: Shipping Calculator

An online retailer provides express shipping for many of its items at a rate of $10.95
for the first item in an order, and $2.95 for each subsequent item in the same order.
Write a function that takes the number of items in the order as its only parameter.
Return the shipping charge for the order as the function’s result. Include a main
program that reads the number of items purchased from the user and displays the
shipping charge.

Challenge 6: Convert an Integer to Its Ordinal Number

Words like first, second and third are referred to as ordinal numbers. In this exercise,
you will write a function that takes an integer as its only parameter and returns a
string containing the appropriate English ordinal number as its only result. Your
function must handle the integers between 1 and 12 (inclusive). It should return an
empty string if the function is called with an argument outside of this range. Include
a main program that demonstrates your function by displaying each integer from 1
to 12 and its ordinal number. Your main program should only run when your file has
not been imported into another program.

Challenge 7: Gregorian Date to Ordinal Date

An ordinal date consists of a year and a day within it, both of which are integers. The
year can be any year in the Gregorian calendar while the day within the year ranges
from one, which represents January 1, through to 365 (or 366 if the year is a leap
year) which represents December 31. Ordinal dates are convenient when computing
differences between dates that are a specific number of days (rather than months). For
example, ordinal dates can be used to easily determine whether a customer is within
a 90 day return period, the sell-by date for a food-product based on its production
date, and the due date for a baby.
Write a function named ordinalDate that takes three integers as parameters.
These parameters will be a day, month and year respectively. The function should
return the day within the year for that date as its only result. Create a main program
that reads a day,month and year from the user and displays the day within the year for
that date. Your main program should only run when your file has not been imported
into another program.

Challenge 8: Is It a Valid Triangle?

If you have 3 straws, possibly of differing lengths, it may or may not be possible
to lay them down so that they form a triangle when their ends are touching. For
example, if all of the straws have a length of 6 inches then one can easily construct
an equilateral triangle using them. However, if one straw is 6 inches long, while
the other two are each only 2 inches long, then a triangle cannot be formed. More
generally, if any one length is greater than or equal to the sum of the other two then
the lengths cannot be used to form a triangle. Otherwise they can form a triangle.
Write a function that determines whether or not three lengths can form a triangle.
The function will take 3 parameters and return a Boolean result. If any of the lengths
are less than or equal to 0 then your function should return False. Otherwise it
should determine whether or not the lengths can be used to form a triangle using
the method described in the previous paragraph, and return the appropriate result.
In addition, write a program that reads 3 lengths from the user and demonstrates the
behaviour of your function.

Challenge 9: Is a Number Prime?

A prime number is an integer greater than one that is only divisible by one and itself.
Write a function that determines whether or not its parameter is prime, returning
True if it is, and False otherwise. Write a main program that reads an integer
from the user and displays a message indicating whether or not it is prime. Ensure
that the main program will not run if the file containing your solution is imported
into another program.

Challenge 10: Check a Password

In this exercise you will write a function that determines whether or not a password
is good.We will define a good password to be a one that is at least 8 characters long
and contains at least one uppercase letter, at least one lowercase letter, and at least
one number. Your function should return True if the password passed to it as its
only parameter is good. Otherwise it should return False. Include a main program
that reads a password from the user and reports whether or not it is good. Ensure
that your main program only runs when your solution has not been imported into
another file.