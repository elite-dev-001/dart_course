* Contents of the SDK

*Now check out what the Dart SDK offers you by entering the following command in the terminal:

    dart help

*You’ll see a list of tools that make up the SDK. Although you won’t directly interact with most of them in this course, it’s helpful to know what they do: 

    - analyze: Your IDE uses this tool to tell you when you’ve made a mistake in your code. The sooner you know, the sooner you can fix it!

    - compile: This tool compiles Dart code into an optimized native executable program for Windows, Linux or macOS. This is known as ahead-of-time, or AOT, compilation. Alongside native executables, web technologies are another major focus for Dart, so you can also use the compile tool to convert Dart code to JavaScript.

    - create: This is for creating new Dart projects, which you’ll do yourself in just a minute.

    - fix: One of Dart’s goals is to continue evolving as a language without becoming bloated by obsolete, or deprecated, code. The fix tool is there to help developers update their old projects to use the shiniest new Dart syntax.

    - format: It’s easy for the indentation in your code to get messed up. This nice little tool will automatically fix it for you.

    - migrate: Version 2.12 was a major update to the Dart language with the addition of sound null safety, which you’ll learn about in Course 7. This tool helps migrate old projects to use null safety. Since you’re starting fresh, though, you won’t need to migrate anything. Lucky you!

    - pub: Pub is the name of the package manager for Dart, and pub is the tool that handles the job. A package is a collection of third-party code that you can use in your own Dart project. This can save you an incredible amount of time since you don’t have to write that code yourself. You can browse the packages available to you on Pub by visiting https://pub.dev.

    - run: This runs your Dart program in the Dart Virtual Machine, or VM. The Dart VM compiles your code right before it’s needed. In contrast to AOT, this is known as just-in-time, or JIT, compilation, which will let you make small changes to your code and rerun it almost instantly. This is especially useful for applications like Flutter where you’ll need to make lots of little changes as you refine the UI.

    - test: Dart fully supports unit testing and this tool will help you get that done.